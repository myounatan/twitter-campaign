/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  CampaignManager,
  CampaignManagerInterface,
} from "../../contracts/CampaignManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_backendAdmin",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CampaignDoesNotExist",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "participant",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FailedToSendRewards",
    type: "error",
  },
  {
    inputs: [],
    name: "NoRewardToClaim",
    type: "error",
  },
  {
    inputs: [],
    name: "NotEnoughRewardsLeft",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyBackendAdmin",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAmount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "campaignId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "tweetString",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokensPerLike",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokensPerRetweet",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardsLeft",
        type: "uint256",
      },
    ],
    name: "CampaignCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "campaignId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokensRewarded",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "likesRewarded",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "retweetsRewarded",
        type: "uint256",
      },
    ],
    name: "CampaignRewarded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "backendAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "campaignCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "campaigns",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "string",
        name: "tweetString",
        type: "string",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "tokensPerLike",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokensPerRetweet",
            type: "uint256",
          },
        ],
        internalType: "struct CampaignManager.TweetRewardStats",
        name: "tweetRewardStats",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "rewardsLeft",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalRewardsGiven",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "enum CampaignManager.RewardType",
            name: "rewardType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
        ],
        internalType: "struct CampaignManager.RewardToken",
        name: "rewardToken",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_campaignId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tweetId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "likes",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "retweets",
            type: "uint256",
          },
        ],
        internalType: "struct CampaignManager.TweetInfo",
        name: "_currentTweetInfo",
        type: "tuple",
      },
    ],
    name: "claimRewardNative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
      {
        internalType: "string",
        name: "_tweetString",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_tokensPerLike",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tokensPerRetweet",
        type: "uint256",
      },
    ],
    name: "createCampaignNative",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001c7138038062001c718339818101604052810190620000379190620001dc565b620000576200004b620000a660201b60201c565b620000ae60201b60201c565b6001808190555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200020e565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001a48262000177565b9050919050565b620001b68162000197565b8114620001c257600080fd5b50565b600081519050620001d681620001ab565b92915050565b600060208284031215620001f557620001f462000172565b5b60006200020584828501620001c5565b91505092915050565b611a53806200021e6000396000f3fe60806040526004361061007b5760003560e01c80637274e30d1161004e5780637274e30d146101205780638da5cb5b1461014b578063d070e40c14610176578063f2fde38b146101a15761007b565b806311c1caaf14610080578063141961bc1461009c57806335161220146100e0578063715018a614610109575b600080fd5b61009a60048036038101906100959190610f0f565b6101ca565b005b3480156100a857600080fd5b506100c360048036038101906100be9190610fde565b610400565b6040516100d79897969594939291906111cd565b60405180910390f35b3480156100ec57600080fd5b50610107600480360381019061010291906112b6565b6106b9565b005b34801561011557600080fd5b5061011e610a1b565b005b34801561012c57600080fd5b50610135610a2f565b6040516101429190611309565b60405180910390f35b34801561015757600080fd5b50610160610a35565b60405161016d9190611324565b60405180910390f35b34801561018257600080fd5b5061018b610a5e565b6040516101989190611324565b60405180910390f35b3480156101ad57600080fd5b506101c860048036038101906101c3919061136b565b610a84565b005b6101d2610b07565b346000810361020d576040517f1f2a200500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003490503360026000600354815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555086600260006003548152602001908152602001600020600101908161028e91906115a4565b508560026000600354815260200190815260200160002060020190816102b491906115a4565b508460026000600354815260200190815260200160002060030190816102da91906115a4565b50836002600060035481526020019081526020016000206004016000018190555082600260006003548152602001908152602001600020600401600101819055508060026000600354815260200190815260200160002060060181905550600060026000600354815260200190815260200160002060080160000160006101000a81548160ff0219169083600181111561037757610376611118565b5b02179055506003600081548092919061038f906116a5565b91905055503373ffffffffffffffffffffffffffffffffffffffff166003547f769b387080c6632151ef5a2693f50e6d482856489f7cf2b167318ea21dcf9fd28989898989886040516103e7969594939291906116ed565b60405180910390a350506103f9610b56565b5050505050565b60026020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054610449906113c7565b80601f0160208091040260200160405190810160405280929190818152602001828054610475906113c7565b80156104c25780601f10610497576101008083540402835291602001916104c2565b820191906000526020600020905b8154815290600101906020018083116104a557829003601f168201915b5050505050908060020180546104d7906113c7565b80601f0160208091040260200160405190810160405280929190818152602001828054610503906113c7565b80156105505780601f1061052557610100808354040283529160200191610550565b820191906000526020600020905b81548152906001019060200180831161053357829003601f168201915b505050505090806003018054610565906113c7565b80601f0160208091040260200160405190810160405280929190818152602001828054610591906113c7565b80156105de5780601f106105b3576101008083540402835291602001916105de565b820191906000526020600020905b8154815290600101906020018083116105c157829003601f168201915b505050505090806004016040518060400160405290816000820154815260200160018201548152505090806006015490806007015490806008016040518060400160405290816000820160009054906101000a900460ff16600181111561064857610647611118565b5b600181111561065a57610659611118565b5b81526020016000820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905088565b6106c1610b07565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610748576040517f58239da100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b826003548110610784576040517f9b35ed3b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003390506000600260008781526020019081526020016000209050600080600061080584600a0160008a815260200190815260200160002060405180604001604052908160008201548152602001600182015481525050888660040160405180604001604052908160008201548152602001600182015481525050610b5f565b9250925092508360060154831115610849576040517f056a69e100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8284600601600082825461085d9190611763565b92505081905550828460070160008282546108789190611797565b925050819055508684600a0160008a81526020019081526020016000206000820151816000015560208201518160010155905050828460090160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108fd9190611797565b9250508190555060008573ffffffffffffffffffffffffffffffffffffffff168460405161092a906117fc565b60006040518083038185875af1925050503d8060008114610967576040519150601f19603f3d011682016040523d82523d6000602084013e61096c565b606091505b50509050806109b45785846040517f864e4ff40000000000000000000000000000000000000000000000000000000081526004016109ab929190611811565b60405180910390fd5b8573ffffffffffffffffffffffffffffffffffffffff168a7f3e09c3a93ee8793bf8d8c266b62be96d22768dc0f120808e1d7ff9c4d66b07268686866040516109ff9392919061183a565b60405180910390a350505050505050610a16610b56565b505050565b610a23610c35565b610a2d6000610cb3565b565b60035481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610a8c610c35565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610afb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af2906118e3565b60405180910390fd5b610b0481610cb3565b50565b600260015403610b4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b439061194f565b60405180910390fd5b6002600181905550565b60018081905550565b6000806000808660000151905060008760200151905060008760000151905060008860200151905081841015610b9e578382610b9b9190611763565b95505b80831015610bb5578281610bb29190611763565b94505b600086148015610bc55750600085145b15610bfc576040517f5aa9184d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b876020015185610c0c919061196f565b886000015187610c1c919061196f565b610c269190611797565b96505050505093509350939050565b610c3d610d77565b73ffffffffffffffffffffffffffffffffffffffff16610c5b610a35565b73ffffffffffffffffffffffffffffffffffffffff1614610cb1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca8906119fd565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610de682610d9d565b810181811067ffffffffffffffff82111715610e0557610e04610dae565b5b80604052505050565b6000610e18610d7f565b9050610e248282610ddd565b919050565b600067ffffffffffffffff821115610e4457610e43610dae565b5b610e4d82610d9d565b9050602081019050919050565b82818337600083830152505050565b6000610e7c610e7784610e29565b610e0e565b905082815260208101848484011115610e9857610e97610d98565b5b610ea3848285610e5a565b509392505050565b600082601f830112610ec057610ebf610d93565b5b8135610ed0848260208601610e69565b91505092915050565b6000819050919050565b610eec81610ed9565b8114610ef757600080fd5b50565b600081359050610f0981610ee3565b92915050565b600080600080600060a08688031215610f2b57610f2a610d89565b5b600086013567ffffffffffffffff811115610f4957610f48610d8e565b5b610f5588828901610eab565b955050602086013567ffffffffffffffff811115610f7657610f75610d8e565b5b610f8288828901610eab565b945050604086013567ffffffffffffffff811115610fa357610fa2610d8e565b5b610faf88828901610eab565b9350506060610fc088828901610efa565b9250506080610fd188828901610efa565b9150509295509295909350565b600060208284031215610ff457610ff3610d89565b5b600061100284828501610efa565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006110368261100b565b9050919050565b6110468161102b565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561108657808201518184015260208101905061106b565b60008484015250505050565b600061109d8261104c565b6110a78185611057565b93506110b7818560208601611068565b6110c081610d9d565b840191505092915050565b6110d481610ed9565b82525050565b6040820160008201516110f060008501826110cb565b50602082015161110360208501826110cb565b50505050565b61111281610ed9565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811061115857611157611118565b5b50565b600081905061116982611147565b919050565b60006111798261115b565b9050919050565b6111898161116e565b82525050565b6111988161102b565b82525050565b6040820160008201516111b46000850182611180565b5060208201516111c7602085018261118f565b50505050565b6000610140820190506111e3600083018b61103d565b81810360208301526111f5818a611092565b905081810360408301526112098189611092565b9050818103606083015261121d8188611092565b905061122c60808301876110da565b61123960c0830186611109565b61124660e0830185611109565b61125461010083018461119e565b9998505050505050505050565b600080fd5b60006040828403121561127c5761127b611261565b5b6112866040610e0e565b9050600061129684828501610efa565b60008301525060206112aa84828501610efa565b60208301525092915050565b6000806000608084860312156112cf576112ce610d89565b5b60006112dd86828701610efa565b93505060206112ee86828701610efa565b92505060406112ff86828701611266565b9150509250925092565b600060208201905061131e6000830184611109565b92915050565b6000602082019050611339600083018461103d565b92915050565b6113488161102b565b811461135357600080fd5b50565b6000813590506113658161133f565b92915050565b60006020828403121561138157611380610d89565b5b600061138f84828501611356565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806113df57607f821691505b6020821081036113f2576113f1611398565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261145a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261141d565b611464868361141d565b95508019841693508086168417925050509392505050565b6000819050919050565b60006114a161149c61149784610ed9565b61147c565b610ed9565b9050919050565b6000819050919050565b6114bb83611486565b6114cf6114c7826114a8565b84845461142a565b825550505050565b600090565b6114e46114d7565b6114ef8184846114b2565b505050565b5b81811015611513576115086000826114dc565b6001810190506114f5565b5050565b601f82111561155857611529816113f8565b6115328461140d565b81016020851015611541578190505b61155561154d8561140d565b8301826114f4565b50505b505050565b600082821c905092915050565b600061157b6000198460080261155d565b1980831691505092915050565b6000611594838361156a565b9150826002028217905092915050565b6115ad8261104c565b67ffffffffffffffff8111156115c6576115c5610dae565b5b6115d082546113c7565b6115db828285611517565b600060209050601f83116001811461160e57600084156115fc578287015190505b6116068582611588565b86555061166e565b601f19841661161c866113f8565b60005b828110156116445784890151825560018201915060208501945060208101905061161f565b86831015611661578489015161165d601f89168261156a565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006116b082610ed9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036116e2576116e1611676565b5b600182019050919050565b600060c08201905081810360008301526117078189611092565b9050818103602083015261171b8188611092565b9050818103604083015261172f8187611092565b905061173e6060830186611109565b61174b6080830185611109565b61175860a0830184611109565b979650505050505050565b600061176e82610ed9565b915061177983610ed9565b925082820390508181111561179157611790611676565b5b92915050565b60006117a282610ed9565b91506117ad83610ed9565b92508282019050808211156117c5576117c4611676565b5b92915050565b600081905092915050565b50565b60006117e66000836117cb565b91506117f1826117d6565b600082019050919050565b6000611807826117d9565b9150819050919050565b6000604082019050611826600083018561103d565b6118336020830184611109565b9392505050565b600060608201905061184f6000830186611109565b61185c6020830185611109565b6118696040830184611109565b949350505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006118cd602683611057565b91506118d882611871565b604082019050919050565b600060208201905081810360008301526118fc816118c0565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000611939601f83611057565b915061194482611903565b602082019050919050565b600060208201905081810360008301526119688161192c565b9050919050565b600061197a82610ed9565b915061198583610ed9565b925082820261199381610ed9565b915082820484148315176119aa576119a9611676565b5b5092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006119e7602083611057565b91506119f2826119b1565b602082019050919050565b60006020820190508181036000830152611a16816119da565b905091905056fea2646970667358221220ff0dff920b98759644b9b1ce9ca7335733f9e79c619737fcfd5f85b9c1b1de7e64736f6c63430008120033";

type CampaignManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CampaignManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CampaignManager__factory extends ContractFactory {
  constructor(...args: CampaignManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _backendAdmin: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_backendAdmin, overrides || {});
  }
  override deploy(
    _backendAdmin: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_backendAdmin, overrides || {}) as Promise<
      CampaignManager & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CampaignManager__factory {
    return super.connect(runner) as CampaignManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CampaignManagerInterface {
    return new Interface(_abi) as CampaignManagerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CampaignManager {
    return new Contract(address, _abi, runner) as unknown as CampaignManager;
  }
}
